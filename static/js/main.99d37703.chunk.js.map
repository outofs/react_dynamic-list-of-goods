{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","concat","status","statusText","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_jsxs","className","type","onClick","sort","goodA","goodB","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAMaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAE5BE,EAAKG,MAJDH,EAAKI,UCLX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,GAADC,OAAIH,EAASI,OAAM,KAAAD,OAAIH,EAASK,aAGjD,OAAOL,EAASM,UAIf,ICTMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCpB,EAAKsB,EAAA,GAAEE,EAAQF,EAAA,GAMtB,OACEG,eAAA,OAAKC,UAAU,MAAKxB,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACE0B,KAAK,SACL,UAAQ,aACRC,QAXgB,WAAH,OAASnB,IAASE,KAAKa,IAWbtB,SACxB,mBAIDD,cAAA,UACE0B,KAAK,SACL,UAAQ,oBACRC,QAlBmB,WAAH,ODMfnB,IACJE,MAAK,SAAAX,GAAK,OAAIA,EACZ6B,MAAK,SAACC,EAAaC,GAAW,OAAKD,EAAMvB,KAAKyB,cAAcD,EAAMxB,SAClE0B,MAAM,EAAG,MCT6BtB,KAAKa,IAkBhBtB,SAC3B,uBAIDD,cAAA,UACE0B,KAAK,SACL,UAAQ,aACRC,QAzBqB,WAAH,ODYjBnB,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMkC,QAAO,SAAA9B,GAAI,MAAmB,QAAfA,EAAKE,YCbIK,KAAKa,IAyBlBtB,SAC7B,mBAIDD,cAACH,EAAS,CAACE,MAAOA,QCvCxBmC,IAASC,OACPnC,cAACkB,EAAG,IACJkB,SAASC,eAAe,U","file":"static/js/main.99d37703.chunk.js","sourcesContent":["import { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((goodA: Good, goodB: Good) => goodA.name.localeCompare(goodB.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getAllHandler = () => getAll().then(setGoods);\n  const get5FirstHandler = () => get5First().then(setGoods);\n  const getRedGoodsHandler = () => getRedGoods().then(setGoods);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={getAllHandler}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={get5FirstHandler}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={getRedGoodsHandler}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}